{"version":3,"sources":["logo.svg","App.js","index.js","reportWebVitals.js"],"names":["currentList","creditsT","creditToChange","personNum","App","useState","showGame","setShowGame","error","setError","isLoaded","setIsLoaded","page","setPage","people","setPeople","level","setLevel","correctLevel","setCredits","creditsShown","onNext","i","length","personID","id","console","log","fetch","then","res","json","result","getCastCredits","cast","title","useEffect","setTimeout","startButton","className","onClick","results","push","name","nextButton","type","placeholder","timer","displayNextClue","header","game","tick","ReactDOM","render","StrictMode","document","getElementById","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","setInterval"],"mappings":"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","file":"static/js/main.d4935fd5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport './styles/css/game.css';\nimport data from './data'\n\nconst currentList = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst movies = [\"Greyhound\", \"Toy Story 4\", \"The Da Vinci Code\", \"The Terminal\", \"The Green Mile\", \"Cast Away\", \"Forrest Gump\", \"Sleepless in Seattle\", \"Apollo 13\", \"Punchline\"];\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n// const people = [];\nvar creditsT = [];\nvar creditToChange = 0;\nvar personNum = -1\n\nfunction App() {\n  const [showGame, setShowGame] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [page, setPage] = useState([]);\n  const [people, setPeople] = useState([]);\n  const [level, setLevel] = useState(1);\n  const [correctLevel, setCorrectLevel] = useState(0);\n  const [credits, setCredits] = useState([]);\n  const [castCredits, setCastCredits] = useState([]);\n  const [creditsShown, setCreditsShown] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\n\n  const onClickStart = () => {\n    setShowGame(true);\n    console.log({page});\n\n    for(let i = 0; i < page.results.length; i++){\n      people.push({\n        id: page.results[i].id,\n        name: page.results[i].name\n      });\n    }\n    setPeople(people);\n    console.log({people});\n  }\n\n  const onNext = () => {\n    for(let i = 0; i < currentList.length; i++){\n      creditsShown[i] = \"\";\n    }\n    creditToChange = 0;\n\n    personNum+=1\n    setLevel(level+1);\n    getMovieCredits(people[personNum].id);\n\n\n  }\n\n  const onNextClue = () => {\n    displayNextClue();\n\n  }\n\n  function getPage(){\n    setIsLoaded(false);\n    fetch(\"https://api.themoviedb.org/3/person/popular?api_key=fb48b37664ce32cd71f7541935052f0f&language=en-US&page=1\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setPage(result);\n          console.log(\"nothing\",{page});\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }\n\n  function getMovieCredits(personID){\n    setIsLoaded(false);\n    console.log(personID);\n    fetch(`https://api.themoviedb.org/3/person/${personID}/movie_credits?api_key=fb48b37664ce32cd71f7541935052f0f&language=en-US`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setCredits(result);\n          creditsT = result;\n          // console.log({isLoaded},{credits});\n          // console.log({isLoaded},creditsT);\n\n          console.log(\"about to call getCastCredits\");\n          console.log(creditsT);\n          getCastCredits();\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n          console.log(\"Error: {error}\");\n        }\n      )\n  }\n\n  function getCastCredits(){\n    if(creditsT.cast == null){\n      console.log(\"No cast credits\");\n      return;\n    }\n    if(creditsT.cast.length < 10){\n      onNext();\n      return;\n    }\n    for(let i = 0; i < creditsT.cast.length; i++){\n      currentList[i] = creditsT.cast[i].title;\n      console.log(creditsT.cast[i].title);\n    }\n  }\n\n  function displayNextClue(){\n    if(!showGame)\n      return;\n    const timer = setTimeout(() => {\n      if(creditToChange < currentList.length){\n        creditsShown[creditToChange] = currentList[creditToChange];\n        console.log(\"Load next credit\");\n        console.log(creditsShown[creditToChange]);\n        console.log(creditToChange);\n        // setCreditsShown(currentList);\n        console.log({currentList})\n        // for(let i = 0; i < credits.cast.length; i++){\n        //\n        // }\n        // setCreditsShown()\n        creditToChange+=1;\n      }else{\n        console.log(\"Reached end of cast credits for: \" + people[level-1].name);\n      }\n\n    }, 1000);\n    return () => clearTimeout(timer);\n  }\n  useEffect(() => {\n    setTimeout(() => {\n      getPage();\n      // console.log(data);\n      console.log({isLoaded},{error});\n    },1)\n\n  }, []);\n  //\n  // useEffect(() => {\n  //   if(!showGame)\n  //     return;\n  //   const timer = setTimeout(() => {\n  //     if(creditToChange < currentList.length){\n  //       currentList[creditToChange] = \"Changed\";\n  //       console.log(\"Load next credit\");\n  //       console.log(creditToChange);\n  //       setCreditsShown(currentList);\n  //       console.log({currentList})\n  //       // for(let i = 0; i < credits.cast.length; i++){\n  //       //\n  //       // }\n  //       // setCreditsShown()\n  //       creditToChange+=1;\n  //     }else{\n  //       console.log(\"Reached end of cast credits for: \" + people[level-1].name);\n  //     }\n  //\n  //   }, 1000);\n  //   return () => clearTimeout(timer);\n  // }, creditsShown);\n\n  const startButton =(\n    <div className=\"container\">\n      <button className=\"skewBtn lorange\" onClick={onClickStart}>Start</button>\n    </div>\n  );\n\n  const nextButton =(\n    <div className=\"answerBox\">\n      <input className=\"wda-input\" type=\"text\" placeholder=\"Guess actor or actress\"/>\n      <button className=\"skewBtn lorange\" onClick={onNextClue}>Clue</button>\n      <button className=\"skewBtn lorange\" onClick={onNext}>Next</button>\n    </div>\n  );\n\n  const header = (\n    <header className=\"App-header\">\n      <div>\n      <h1>WHO DAT ACT?</h1>\n      <p>\n        Guess the actor/actress based on 10 movies they were in.\n        Unlimited guesses.\n      </p>\n      </div>\n      {isLoaded ? startButton : null}\n    </header>\n  );\n\n  const game = (\n    <div className=\"game\">\n      <div className=\"row1\">\n      {isLoaded ? <h1>GAME</h1> : <h1>LOADING</h1>}\n      <h2>{correctLevel}/{level}</h2>\n      </div>\n      <div className=\"row2\">\n        <div id=\"col1\" className=\"column\">\n          <h2>{creditsShown[0]}</h2>\n          <h2>{creditsShown[1]}</h2>\n          <h2>{creditsShown[2]}</h2>\n          <h2>{creditsShown[3]}</h2>\n          <h2>{creditsShown[4]}</h2>\n        </div>\n        <div id=\"col2\" className=\"column\">\n          <h2>{creditsShown[5]}</h2>\n          <h2>{creditsShown[6]}</h2>\n          <h2>{creditsShown[7]}</h2>\n          <h2>{creditsShown[8]}</h2>\n          <h2>{creditsShown[9]}</h2>\n        </div>\n      </div>\n      <div className=\"row3\">\n        {nextButton}\n      </div>\n    </div>\n  )\n  const movie = (\n    <h1>{}</h1>\n  )\n  return (\n    <div className=\"App\">\n\n      {!showGame ? header : null}\n\n      {showGame ? game : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction tick() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\ntick();\nsetInterval(tick, 1000);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}